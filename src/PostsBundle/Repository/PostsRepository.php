<?php

namespace PostsBundle\Repository;

use Doctrine\DBAL\DBALException;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;
use Symfony\Component\HttpFoundation\JsonResponse;
/**

 * PostsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostsRepository extends \Doctrine\ORM\EntityRepository
{

    public function VerifUserLiked($idPost,$idu)
    {

        $query = $this->getEntityManager()
            ->createQuery("SELECT COUNT(l) FROM PostsBundle:Likes l WHERE l.idu ='$idu' AND l.idpost = '$idPost' ");
        try {
            return $query->getSingleScalarResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }
    }









    public function GetPostLike($idPost,$idu)
    {
        $query = $this->getEntityManager()
            ->createQuery("SELECT l FROM PostsBundle:Likes l WHERE l.idu ='$idu' AND l.idpost = '$idPost' ");
        try {
            return $query->getSingleResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }
    }


    public function GetPostComments($idpost){
        $query = $this->getEntityManager()
            ->createQuery("SELECT c FROM PostsBundle:Comments c WHERE c.idpost ='$idpost' ");
        return $query->getResult();
    }

    public function GetPostReacts($idpost){
        $query = $this->getEntityManager()
            ->createQuery("SELECT l FROM PostsBundle:Likes l WHERE l.idpost ='$idpost' ");
        return $query->getResult();
    }

    public function getLikes(){
        $query = $this->getEntityManager()
            ->createQuery("SELECT l FROM PostsBundle:Likes l ORDER BY l.idpost ASC ");
        return $query->getResult();
    }

    public function getStoriesDistinct(){
        $query = $this->getEntityManager()
            ->createQuery("SELECT s FROM PostsBundle:Posts s WHERE s.type =1 GROUP BY s.idu ");
        return $query->getResult();
    }

    public function getStories(){
        $query = $this->getEntityManager()
            ->createQuery("SELECT s FROM PostsBundle:Posts s WHERE s.type =1 ORDER BY s.idu");
        return $query->getResult();
    }


    public function getdbusers(){
        $conn = $this->getEntityManager()->getConnection();
        $sql = 'SELECT * FROM fos_user';

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {

        }

        $stmt->execute();
        return $stmt->fetchAll();


    }
    public function getprofileuser($us){
        $conn = $this->getEntityManager()->getConnection();
        $sql = "SELECT * FROM fos_user WHERE username = '$us' ";

        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {

        }

        $stmt->execute();
        return $stmt->fetchAll();


    }



}